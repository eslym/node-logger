{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import EventEmitter = require(\"events\");\nimport * as util from \"util\";\nimport * as os from \"os\";\nimport * as inspector from \"inspector\";\nimport {PathLike, createWriteStream} from \"fs\";\nimport {Writable} from \"stream\";\n\nconst ansi = {\n    reset: '\\x1B[0m',\n    red: '\\x1B[31m',\n    yellow: '\\x1B[33m',\n    white: '\\x1B[37m',\n    gray: '\\x1B[90m',\n}\n\nexport interface TextLoggingOptions {\n    color?: boolean,\n    indent?: number,\n    name?: string,\n    log?: NodeJS.WritableStream | false,\n    info?: NodeJS.WritableStream | false,\n    warn?: NodeJS.WritableStream | false,\n    error?: NodeJS.WritableStream | false,\n}\n\nfunction pad(n: number, digit: number) {\n    let str = n.toString();\n    return \"0\".repeat(digit - str.length) + str;\n}\n\nfunction formatDate(time: Date) {\n    return `[${time.getFullYear()}-${pad(time.getMonth() + 1, 2)}-${pad(time.getDate(), 2)} ` +\n        `${pad(time.getHours(), 2)}:${pad(time.getMinutes(), 2)}:${pad(time.getSeconds(), 2)}]`;\n}\n\ntype LogFn = (this: Logger, ...data: any) => void;\ntype LogFnWithName = (this: Logger, scope: string, ...data: any) => void;\n\nexport type LogLevel = 'log' | 'info' | 'warn' | 'error';\n\nexport class Logger extends EventEmitter {\n    readonly log: LogFn;\n    readonly info: LogFn;\n    readonly warn: LogFn;\n    readonly error: LogFn;\n\n    readonly logWith: LogFnWithName;\n    readonly infoWith: LogFnWithName;\n    readonly warnWith: LogFnWithName;\n    readonly errorWith: LogFnWithName;\n\n    constructor() {\n        super();\n    }\n}\n\nexport declare interface Logger {\n    on(event: 'record', listener: (time: Date, level: LogLevel, data: any, scope?: string) => any): this;\n\n    once(event: 'record', listener: (time: Date, level: LogLevel, data: any, scope?: string) => any): this;\n\n    emit(event: 'record', time: Date, level: LogLevel, data: any, scope?: string): boolean;\n}\n\nfor (let level of ['log', 'info', 'warn', 'error']) {\n    Logger.prototype[level] = function (...data: any) {\n        let now = new Date();\n        for (let record of data) {\n            this.emit('record', now, level, record);\n        }\n    }\n    Logger.prototype[level + 'With'] = function (scope: string, ...data: any) {\n        let now = new Date();\n        for (let record of data) {\n            this.emit('record', now, level, record, scope);\n        }\n    }\n}\n\nconst config = {\n    log: {\n        color: ansi.gray,\n        io: process.stdout,\n    },\n    info: {\n        color: ansi.white,\n        io: process.stdout,\n    },\n    warn: {\n        color: ansi.yellow,\n        io: process.stderr,\n    },\n    error: {\n        color: ansi.red,\n        io: process.stderr,\n    },\n}\n\nclass AppendStream extends Writable{\n    readonly #path: PathLike;\n\n    constructor(path: PathLike) {\n        super();\n        this.#path = path;\n    }\n\n    _write(chunk: any, encoding: BufferEncoding, callback: (error?: (Error | null)) => void) {\n        let stream = createWriteStream(this.#path, {flags: 'a'});\n        let res = stream.write(chunk, encoding, callback);\n        stream.close();\n        return res;\n    }\n}\n\nexport function createAppendStream(path: PathLike){\n    return new AppendStream(path);\n}\n\nexport function TextLogging(options: TextLoggingOptions = {}) {\n    return (time: Date, level: LogLevel, data: any, scope?: string) => {\n        if(options[level] === false) return;\n        let log = (options.color === undefined || options.color) ? config[level].color : '';\n        log += formatDate(time);\n        if (options.name) log += `[${options.name}]`;\n        log += `[${level.toUpperCase()}]`;\n        if (scope) log += `[${scope}]`;\n        log += typeof data === 'string' ? data : util.inspect(data, false, 2, false);\n        let indent = \" \".repeat(options.indent ?? 4) + os.EOL;\n        let io = (options[level] as NodeJS.WritableStream ?? config[level].io);\n        io.write(log.replace(/\\r?\\n|\\n?\\r/g, indent));\n        io.write(os.EOL);\n        if(options.color === undefined || options.color) io.write(ansi.reset);\n    }\n}\n\nexport function InspectorLogging(time: Date, level: LogLevel, data: any) {\n    ((inspector as any).console as Console)[level](data);\n}\n\nexport const logger = new Logger();\n\nlogger.on('record', TextLogging());\nlogger.on('record', InspectorLogging);\n"]}